<launch>

  <!--arg name="model" default="$(find urdf_tutorials)/urdf/01-myfirst.urdf"/ -->
  <arg name="model" default="$(find null_space_controllers)/urdf/5DoF_2D.urdf.xacro"/>
  <arg name="rvizconfig" default="$(find null_space_controllers)/rviz/2D.rviz" />

  <!-- Gazebo args -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- setup gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  
  <!-- push robot_description to factory-->
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- spawn urdf in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />
  
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher" respawn="false" output="screen">
    <param name="publish_frequency" type="double" value="30.0" />
    <remap from="/joint_states" to="/DoF5_2D/joint_states"/>
  </node>

  
  <!-- load joint state pub and robot state pub -->
  <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/-->
  
  <!-- launch rviz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />


  <!-- load controller configs -->
  <rosparam command="load"
            file="$(find null_space_controllers)/config/ns_2d.yaml"
            ns="/DoF5_2D" />

  <!-- load controller manager -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
	respawn="false"
	output="screen"
	ns="/DoF5_2D"
	args="joint_state_controller"/>

</launch>







